
    Можно ли указывать unchecked исключения в секции throws?
    Что будет, если в секции throws одно и то же исключение указано несколько раз?
    Можно ли смешивать checked и unchecked исключения?
    В чем отличие checked и unchecked исключений?
    В чем отличие Exception и Error?
    Самом любимый и нелюбимый Exception?
    Можно ли перехватить Error или Throwable?




В Java есть два вида сообщений о ошибках:
1. Error — критические ошибки, которые обычно не возможно исправить, и которые приводят к завершению программы, такие как OutOfMemoryError. Их можно перехватить с помощью catch, но в этом редко бывает смысл.
2. Exception — ошибки приложения, которые можно обработать. Они делятся на:
— checked — Exception, которые обязательно нужно либо перехватить в методе с помощью catch или переслать дальше с помощью throws (указать данный Exception или его суперкласс в секции throws метода)
— unchecked — Exception, которые можно не перехватывать и не указывать в секции throws метода,

Структура наследования:
1. Throwable — любые ошибки и exception
1.1 Error — критические ошибки, которые обычно не обрабатываются и завершают программу,
1.2 Exception — все exception, по умолчанию все наследуемые классы checked exception (кроме тех кто наследуются от RuntimeException)
1.2.1 RuntimeException — все наследуемые от этого классы — unchecked exception,

Бывают вопросы о самом любимом и нелюбимом Exception'е. На мой вгляд самый неприятный вид Exception это, скорее всего, NullPointerException (он показывает, что что-то написано скорее всего неправильно), самый „лучший“ IllegalArgumentException (это значит, что программист предусмотрел проверку данной ситуации).


https://habr.com/ru/company/luxoft/blog/272025/
